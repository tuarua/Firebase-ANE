<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.firebase.auth"><apiName>com.tuarua.firebase.auth</apiName><apiDetail/><apiClassifier id="com.tuarua.firebase.auth:EmailAuthCredential"><apiName>EmailAuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.firebase.auth:AuthCredential</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:EmailAuthCredential:EmailAuthCredential"><apiName>EmailAuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>email</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>password</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:TwitterAuthCredential"><apiName>TwitterAuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.firebase.auth:AuthCredential</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:TwitterAuthCredential:TwitterAuthCredential"><apiName>TwitterAuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>accessToken</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>secret</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:OAuthProvider"><apiName>OAuthProvider</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:OAuthProvider:OAuthProvider"><apiName>OAuthProvider</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>providerId</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.auth:OAuthProvider:customParameters:get"><apiName>customParameters</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Object"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:OAuthProvider:providerId:get"><apiName>providerId</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:OAuthProvider:scopes:get"><apiName>scopes</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Vector$String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:PlayGamesAuthCredential"><apiName>PlayGamesAuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.firebase.auth:AuthCredential</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:PlayGamesAuthCredential:PlayGamesAuthCredential"><apiName>PlayGamesAuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>serverAuthCode</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:AuthResult"><apiName>AuthResult</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:AuthResult:AuthResult"><apiName>AuthResult</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.auth:AuthResult:additionalUserInfo"><apiName>additionalUserInfo</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.auth:AdditionalUserInfo</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthResult:user"><apiName>user</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.auth:FirebaseUser</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:OAuthCredential"><apiName>OAuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:OAuthCredential:OAuthCredential"><apiName>OAuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:FirebaseUser"><apiName>FirebaseUser</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:FirebaseUser:FirebaseUser"><apiName>FirebaseUser</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>uid</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>email</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>isAnonymous</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>isEmailVerified</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>photoUrl</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>phoneNumber</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:getIdToken"><apiName>getIdToken</apiName><shortdesc>
     Retrieves the Firebase authentication token, possibly refreshing it if it has expired.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>forceRefresh</apiItemName><apiType value="Boolean"/><apiDesc>Forces a token refresh. Useful if the token becomes invalid for some reason
     other than an expiration.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc>
     Retrieves the Firebase authentication token, possibly refreshing it if it has expired.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:link"><apiName>link</apiName><shortdesc>
     Associates a user account from a third-party identity provider with this user and
     returns additional identity provider data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>credential</apiItemName><apiOperationClassifier>com.tuarua.firebase.auth:AuthCredential</apiOperationClassifier><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Associates a user account from a third-party identity provider with this user and
     returns additional identity provider data.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:reauthenticateWithCredential"><apiName>reauthenticateWithCredential</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>credential</apiItemName><apiOperationClassifier>com.tuarua.firebase.auth:AuthCredential</apiOperationClassifier></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:reauthenticateWithProvider"><apiName>reauthenticateWithProvider</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>provider</apiItemName><apiOperationClassifier>com.tuarua.firebase.auth:OAuthProvider</apiOperationClassifier></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:reload"><apiName>reload</apiName><shortdesc>
     Reloads the user's profile data from the server.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Reloads the user's profile data from the server.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:remove"><apiName>remove</apiName><shortdesc>
     Deletes the user account (also signs out the user, if this was the current user).</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Deletes the user account (also signs out the user, if this was the current user).
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:sendEmailVerification"><apiName>sendEmailVerification</apiName><shortdesc>
     Initiates email verification for the user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Initiates email verification for the user.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:unlink"><apiName>unlink</apiName><shortdesc>
     Disassociates a user account from a third-party identity provider with this user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>provider</apiItemName><apiType value="String"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Disassociates a user account from a third-party identity provider with this user.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:updateEmail"><apiName>updateEmail</apiName><shortdesc>
     Updates the email address for the user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Updates the email address for the user. On success, the cached user profile data is
     updated.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:updatePassword"><apiName>updatePassword</apiName><shortdesc>
     Updates the password for the user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>value</apiItemName><apiType value="String"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Updates the password for the user. On success, the cached user profile data is updated.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.auth:FirebaseUser:updateProfile"><apiName>updateProfile</apiName><shortdesc>
     Updates the profile for the user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>displayName</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam><apiParam><apiItemName>photoUrl</apiItemName><apiType value="String"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Updates the profile for the user.
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase.auth:FirebaseUser:displayName:get"><apiName>displayName</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:FirebaseUser:email:get"><apiName>email</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:FirebaseUser:isAnonymous:get"><apiName>isAnonymous</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:FirebaseUser:isEmailVerified:get"><apiName>isEmailVerified</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:FirebaseUser:phoneNumber:get"><apiName>phoneNumber</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:FirebaseUser:photoUrl:get"><apiName>photoUrl</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:FirebaseUser:uid:get"><apiName>uid</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:AdditionalUserInfo"><apiName>AdditionalUserInfo</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:AdditionalUserInfo:AdditionalUserInfo"><apiName>AdditionalUserInfo</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.auth:AdditionalUserInfo:isNewUser"><apiName>isNewUser</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AdditionalUserInfo:profile"><apiName>profile</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AdditionalUserInfo:providerId"><apiName>providerId</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AdditionalUserInfo:username"><apiName>username</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:Provider"><apiName>Provider</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.auth:Provider:EMAIL"><apiName>EMAIL</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>password</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:Provider:FACEBOOK"><apiName>FACEBOOK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>facebook.com</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:Provider:GITHUB"><apiName>GITHUB</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>github.com</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:Provider:GOOGLE"><apiName>GOOGLE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>google.com</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:Provider:PHONE"><apiName>PHONE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>phone</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:Provider:PLAY_GAMES"><apiName>PLAY_GAMES</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>playgames.google.com</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:Provider:TWITTER"><apiName>TWITTER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>twitter.com</apiData><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:AuthCredential"><apiName>AuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:AuthCredential:AuthCredential"><apiName>AuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>provider</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>param0</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam><apiParam><apiItemName>param1</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.auth:AuthCredential:param0:get"><apiName>param0</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthCredential:param1:get"><apiName>param1</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthCredential:provider:get"><apiName>provider</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:AuthError"><apiName>AuthError</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:AuthError:AuthError"><apiName>AuthError</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="any"/><apiData/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="any"/><apiData>0</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:AuthErrorCode"><apiName>AuthErrorCode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:ACCOUNT_EXISTS_WITH_DIFFERENT_CREDENTIAL"><apiName>ACCOUNT_EXISTS_WITH_DIFFERENT_CREDENTIAL</apiName><shortdesc> Indicates account linking is required.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17012</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates account linking is required. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:ALREADY_IN_USE"><apiName>ALREADY_IN_USE</apiName><shortdesc> Indicates the email used to attempt a sign up is already in use.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17007</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the email used to attempt a sign up is already in use. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:APP_NOT_AUTHORIZED"><apiName>APP_NOT_AUTHORIZED</apiName><shortdesc> Indicates the App is not authorized to use Firebase Authentication with the provided API Key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17028</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the App is not authorized to use Firebase Authentication with the provided API Key. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:APP_NOT_VERIFIED"><apiName>APP_NOT_VERIFIED</apiName><shortdesc> Indicates that the app could not be verified by Firebase during phone number authentication.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17055</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the app could not be verified by Firebase during phone number authentication. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:APP_VERIFICATION_USER_INTERACTION_FAILURE"><apiName>APP_VERIFICATION_USER_INTERACTION_FAILURE</apiName><shortdesc> Indicates a general failure during the app verification flow.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17059</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates a general failure during the app verification flow. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:CAPTCHA_CHECK_FAILED"><apiName>CAPTCHA_CHECK_FAILED</apiName><shortdesc> Indicates that the reCAPTCHA token is not valid.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17056</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the reCAPTCHA token is not valid. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:CREDENTIAL_ALREADY_IN_USE"><apiName>CREDENTIAL_ALREADY_IN_USE</apiName><shortdesc> Indicates an attempt to link with a credential that has already been linked with a different Firebase account </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17025</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates an attempt to link with a credential that has already been linked with a different Firebase account </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:CUSTOM_TOKEN_MISMATCH"><apiName>CUSTOM_TOKEN_MISMATCH</apiName><shortdesc> Indicates the service account and the API key belong to different projects.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17002</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the service account and the API key belong to different projects. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:EXPIRED_ACTION_CODE"><apiName>EXPIRED_ACTION_CODE</apiName><shortdesc> Indicates the OOB code is expired.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17029</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the OOB code is expired. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INTERNAL"><apiName>INTERNAL</apiName><shortdesc> Indicates an internal error occurred.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17999</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates an internal error occurred. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_ACTION_CODE"><apiName>INVALID_ACTION_CODE</apiName><shortdesc> Indicates the OOB code is invalid.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17030</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the OOB code is invalid. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_API_KEY"><apiName>INVALID_API_KEY</apiName><shortdesc> Indicates an invalid API key was supplied in the request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17023</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates an invalid API key was supplied in the request. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_APP_CREDENTIAL"><apiName>INVALID_APP_CREDENTIAL</apiName><shortdesc> Indicates that an invalid APNS device token was used in the verifyClient request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17048</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that an invalid APNS device token was used in the verifyClient request. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_CLIENT_ID"><apiName>INVALID_CLIENT_ID</apiName><shortdesc> Indicates that the clientID used to invoke a web flow is invalid.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17060</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the clientID used to invoke a web flow is invalid. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_CONTINUE_URI"><apiName>INVALID_CONTINUE_URI</apiName><shortdesc> Indicates that the domain specified in the continue URI is not valid.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17039</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the domain specified in the continue URI is not valid. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_CREDENTIAL"><apiName>INVALID_CREDENTIAL</apiName><shortdesc> Indicates the IDP token or requestUri is invalid.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17004</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the IDP token or requestUri is invalid. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_CUSTOM_TOKEN"><apiName>INVALID_CUSTOM_TOKEN</apiName><shortdesc> Indicates a validation error with the custom token.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17000</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates a validation error with the custom token. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_EMAIL"><apiName>INVALID_EMAIL</apiName><shortdesc> Indicates the email is invalid.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17008</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the email is invalid. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_MESSAGE_PAYLOAD"><apiName>INVALID_MESSAGE_PAYLOAD</apiName><shortdesc> Indicates that there are invalid parameters in the payload during a send password reset email attempt.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17031</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that there are invalid parameters in the payload during a send password reset email attempt. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_PHONE_NUMBER"><apiName>INVALID_PHONE_NUMBER</apiName><shortdesc> Indicates that an invalid phone number was provided in a call to verifyPhoneNumber:completion:.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17042</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that an invalid phone number was provided in a call to verifyPhoneNumber:completion:. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_RECIPIENT_EMAIL"><apiName>INVALID_RECIPIENT_EMAIL</apiName><shortdesc> Indicates that the recipient email is invalid.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17033</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the recipient email is invalid. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_SENDER"><apiName>INVALID_SENDER</apiName><shortdesc> Indicates that the sender email is invalid during a send password reset email attempt.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17032</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the sender email is invalid during a send password reset email attempt. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_USER_TOKEN"><apiName>INVALID_USER_TOKEN</apiName><shortdesc> Indicates user’s saved auth credential is invalid, the user needs to sign in again.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17017</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates user’s saved auth credential is invalid, the user needs to sign in again. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_VERIFICATION_CODE"><apiName>INVALID_VERIFICATION_CODE</apiName><shortdesc> Indicates that an invalid verification code was used in the verifyPhoneNumber request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17044</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that an invalid verification code was used in the verifyPhoneNumber request. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:INVALID_VERIFICATION_ID"><apiName>INVALID_VERIFICATION_ID</apiName><shortdesc> Indicates that an invalid verification ID was used in the verifyPhoneNumber request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17046</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that an invalid verification ID was used in the verifyPhoneNumber request. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:KEYCHAIN"><apiName>KEYCHAIN</apiName><shortdesc> Indicates an error occurred while attempting to access the keychain.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17995</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates an error occurred while attempting to access the keychain. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_ANDROID_PACKAGE_NAME"><apiName>MISSING_ANDROID_PACKAGE_NAME</apiName><shortdesc> Indicates that the android package name is missing when the androidInstallApp flag is set to true.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17037</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the android package name is missing when the androidInstallApp flag is set to true. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_APP_CREDENTIAL"><apiName>MISSING_APP_CREDENTIAL</apiName><shortdesc> Indicates that the APNS device token is missing in the verifyClient request.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17047</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the APNS device token is missing in the verifyClient request. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_APP_TOKEN"><apiName>MISSING_APP_TOKEN</apiName><shortdesc> Indicates that the APNs device token could not be obtained.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17053</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the APNs device token could not be obtained. The app may not have set up remote notification
     correctly, or may fail to forward the APNs device token to FIRAuth if app delegate swizzling is disabled. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_CONTINUE_URI"><apiName>MISSING_CONTINUE_URI</apiName><shortdesc> Indicates that a continue URI was not provided in a request to the backend which requires one.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17040</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that a continue URI was not provided in a request to the backend which requires one. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_EMAIL"><apiName>MISSING_EMAIL</apiName><shortdesc> Indicates that an email address was expected but one was not provided.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17034</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that an email address was expected but one was not provided. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_IOS_BUNDLE_ID"><apiName>MISSING_IOS_BUNDLE_ID</apiName><shortdesc> Indicates that the iOS bundle ID is missing when a iOS App Store ID is provided.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17036</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the iOS bundle ID is missing when a iOS App Store ID is provided. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_PHONE_NUMBER"><apiName>MISSING_PHONE_NUMBER</apiName><shortdesc> Indicates that a phone number was not provided in a call to verifyPhoneNumber:completion:.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17041</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that a phone number was not provided in a call to verifyPhoneNumber:completion:. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_VERIFICATION_CODE"><apiName>MISSING_VERIFICATION_CODE</apiName><shortdesc> Indicates that the phone auth credential was created with an empty verification code.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17043</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the phone auth credential was created with an empty verification code. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:MISSING_VERIFICATION_ID"><apiName>MISSING_VERIFICATION_ID</apiName><shortdesc> Indicates that the phone auth credential was created with an empty verification ID.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17045</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the phone auth credential was created with an empty verification ID. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:NETWORK_ERROR"><apiName>NETWORK_ERROR</apiName><shortdesc> Indicates a network error occurred (such as a timeout, interrupted connection, or unreachable host).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17020</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates a network error occurred (such as a timeout, interrupted connection, or unreachable host).
     These types of errors are often recoverable with a retry. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:NOTIFICATION_NOT_FORWARDED"><apiName>NOTIFICATION_NOT_FORWARDED</apiName><shortdesc> Indicates that the app fails to forward remote notification to FIRAuth.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17054</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the app fails to forward remote notification to FIRAuth. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:NO_SUCH_PROVIDER"><apiName>NO_SUCH_PROVIDER</apiName><shortdesc> Indicates an attempt to unlink a provider that is not linked.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17016</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates an attempt to unlink a provider that is not linked. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:NULL_USER"><apiName>NULL_USER</apiName><shortdesc> Indicates that a non-null user was expected as an argmument to the operation but a null user was provided.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17067</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that a non-null user was expected as an argmument to the operation but a null user was provided. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:OPERATION_NOT_ALLOWED"><apiName>OPERATION_NOT_ALLOWED</apiName><shortdesc> Indicates the administrator disabled sign in with the specified identity provider.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17006</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the administrator disabled sign in with the specified identity provider. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:PROVIDER_ALREADY_LINKED"><apiName>PROVIDER_ALREADY_LINKED</apiName><shortdesc> Indicates an attempt to link a provider to which the account is already linked.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17015</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates an attempt to link a provider to which the account is already linked. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:QUOTA_EXCEEDED"><apiName>QUOTA_EXCEEDED</apiName><shortdesc> Indicates that the quota of SMS messages for a given project has been exceeded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17052</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the quota of SMS messages for a given project has been exceeded. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:REQUIRES_RECENT_LOGIN"><apiName>REQUIRES_RECENT_LOGIN</apiName><shortdesc> Indicates the user has attemped to change email or password more than 5 minutes after signing in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17014</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the user has attemped to change email or password more than 5 minutes after signing in. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:SESSION_EXPIRED"><apiName>SESSION_EXPIRED</apiName><shortdesc> Indicates that the SMS code has expired.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17051</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the SMS code has expired. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:TOO_MANY_REQUESTS"><apiName>TOO_MANY_REQUESTS</apiName><shortdesc> Indicates that too many requests were made to a server method.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17010</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that too many requests were made to a server method. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:UNAUTHORIZED_DOMAIN"><apiName>UNAUTHORIZED_DOMAIN</apiName><shortdesc> Indicates that the domain specified in the continue URL is not whitelisted in the Firebase console.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17038</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the domain specified in the continue URL is not whitelisted in the Firebase console. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:USER_DISABLED"><apiName>USER_DISABLED</apiName><shortdesc> Indicates the user’s account is disabled on the server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17005</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the user’s account is disabled on the server. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:USER_MISMATCH"><apiName>USER_MISMATCH</apiName><shortdesc> Indicates that an attempt was made to reauthenticate with a user which is not the current user.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17024</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that an attempt was made to reauthenticate with a user which is not the current user. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:USER_NOT_FOUND"><apiName>USER_NOT_FOUND</apiName><shortdesc> Indicates the user account was not found.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17011</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the user account was not found. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:USER_TOKEN_EXPIRED"><apiName>USER_TOKEN_EXPIRED</apiName><shortdesc> Indicates the saved token has expired, for example, the user may have changed account password on
     another device.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17021</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the saved token has expired, for example, the user may have changed account password on
     another device. The user needs to sign in again on the device that made this request. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:WEAK_PASSWORD"><apiName>WEAK_PASSWORD</apiName><shortdesc> Indicates an attempt to set a password that is considered too weak.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17026</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates an attempt to set a password that is considered too weak. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:WEB_CONTEXT_ALREADY_PRESENTED"><apiName>WEB_CONTEXT_ALREADY_PRESENTED</apiName><shortdesc> Indicates that an attempt was made to present a new web context while one was already being presented.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17057</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that an attempt was made to present a new web context while one was already being presented. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:WEB_CONTEXT_CANCELLED"><apiName>WEB_CONTEXT_CANCELLED</apiName><shortdesc> Indicates that the URL presentation was cancelled prematurely by the user.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17058</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that the URL presentation was cancelled prematurely by the user. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:WEB_INTERNAL"><apiName>WEB_INTERNAL</apiName><shortdesc> Indicates that an internal error occurred within a SFSafariViewController or UIWebview.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17062</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that an internal error occurred within a SFSafariViewController or UIWebview. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:WEB_NETWORK_REQUEST_FAILED"><apiName>WEB_NETWORK_REQUEST_FAILED</apiName><shortdesc> Indicates that a network request within a SFSafariViewController or UIWebview failed.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17061</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates that a network request within a SFSafariViewController or UIWebview failed. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.auth:AuthErrorCode:WRONG_PASSWORD"><apiName>WRONG_PASSWORD</apiName><shortdesc> Indicates the user attempted sign in with a wrong password.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17009</apiData><apiType value="int"/></apiValueDef><apiDesc> Indicates the user attempted sign in with a wrong password. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:PhoneAuthCredential"><apiName>PhoneAuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.firebase.auth:AuthCredential</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:PhoneAuthCredential:PhoneAuthCredential"><apiName>PhoneAuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>verificationId</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>code</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:GithubAuthCredential"><apiName>GithubAuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.firebase.auth:AuthCredential</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:GithubAuthCredential:GithubAuthCredential"><apiName>GithubAuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>accessToken</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:FacebookAuthCredential"><apiName>FacebookAuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.firebase.auth:AuthCredential</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:FacebookAuthCredential:FacebookAuthCredential"><apiName>FacebookAuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>accessToken</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.auth:GoogleAuthCredential"><apiName>GoogleAuthCredential</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.firebase.auth:AuthCredential</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.auth:GoogleAuthCredential:GoogleAuthCredential"><apiName>GoogleAuthCredential</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>idToken</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>accessToken</apiItemName><apiType value="String"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier></apiPackage>